<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Apollo" tests="204" failures="8" timestamp="8 Nov 2016 06:51:50 GMT" time="0.853" errors="0">
  <testcase name="testItr_hasNext" time="0.007" classname="ItrTest_newList"/>
  <testcase name="testItr_next" time="0.002" classname="ItrTest_newList"/>
  <testcase name="testItr_remove" time="0.002" classname="ItrTest_newList"/>
  <testcase name="testItr_hasNext" time="0.005" classname="ItrTest_A_remove0_emptyList"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_A_remove0_emptyList"/>
  <testcase name="testItr_remove" time="0.002" classname="ItrTest_A_remove0_emptyList"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_A_removeA_emptyList"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_A_removeA_emptyList"/>
  <testcase name="testItr_remove" time="0.001" classname="ItrTest_A_removeA_emptyList"/>
  <testcase name="testItr_hasNext" time="0.003" classname="ItrTest_A_removeFirst_emptyList"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_A_removeFirst_emptyList"/>
  <testcase name="testItr_remove" time="0.001" classname="ItrTest_A_removeFirst_emptyList"/>
  <testcase name="testItr_hasNext" time="0.002" classname="ItrTest_A_removeLast_emptyList"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_A_removeLast_emptyList"/>
  <testcase name="testItr_remove" time="0.001" classname="ItrTest_A_removeLast_emptyList"/>
  <testcase name="testItrNextRemove_hasNext" time="0.002" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItrNextRemove_remove" time="0.002" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItrNext_next" time="0.001" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_A_set0B_B"/>
  <testcase name="testItrNextRemove_hasNext" time="0.004" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItrNextRemove_remove" time="0.0" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItrNext_next" time="0.001" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItrNext_remove" time="0.0" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItr_remove" time="0.001" classname="ItrTest_AB_removeA_B"/>
  <testcase name="testItrNextRemove_hasNext" time="0.001" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItrNextRemove_remove" time="0.001" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItrNext_next" time="0.0" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItrNext_remove" time="0.0" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_AB_removeFirst_B"/>
  <testcase name="testItrNextRemove_hasNext" time="0.011" classname="ItrTest_AB_removeLast_A">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at TestCase.hasNext(TestCase.java:271)
	at ItrTest_AB_removeLast_A.testItrNextRemove_hasNext(ItrTest_AB_removeLast_A.java:126)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- testItrNextRemove_hasNext -->
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_AB_removeLast_A">
    <failure type="java.lang.AssertionError" message="expected [1] but found [2]">
      <![CDATA[java.lang.AssertionError: expected [1] but found [2]
	at TestCase.next(TestCase.java:282)
	at ItrTest_AB_removeLast_A.testItrNextRemove_next(ItrTest_AB_removeLast_A.java:137)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- testItrNextRemove_next -->
  <testcase name="testItrNextRemove_remove" time="0.001" classname="ItrTest_AB_removeLast_A"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_AB_removeLast_A">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at TestCase.hasNext(TestCase.java:271)
	at ItrTest_AB_removeLast_A.testItrNext_hasNext(ItrTest_AB_removeLast_A.java:92)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- testItrNext_hasNext -->
  <testcase name="testItrNext_next" time="0.007" classname="ItrTest_AB_removeLast_A">
    <failure type="java.lang.AssertionError" message="expected [1] but found [2]">
      <![CDATA[java.lang.AssertionError: expected [1] but found [2]
	at TestCase.next(TestCase.java:282)
	at ItrTest_AB_removeLast_A.testItrNext_next(ItrTest_AB_removeLast_A.java:103)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- testItrNext_next -->
  <testcase name="testItrNext_remove" time="0.0" classname="ItrTest_AB_removeLast_A"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_AB_removeLast_A"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_AB_removeLast_A"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_AB_removeLast_A"/>
  <testcase name="testItrNextRemove_hasNext" time="0.0" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItrNextRemove_remove" time="0.001" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItrNext_next" time="0.001" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItr_hasNext" time="0.0" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItr_remove" time="0.007" classname="ItrTest_AB_removeB_A"/>
  <testcase name="testItrNextRemove_hasNext" time="0.001" classname="ItrTest_AB_remove1_A">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at TestCase.hasNext(TestCase.java:271)
	at ItrTest_AB_remove1_A.testItrNextRemove_hasNext(ItrTest_AB_remove1_A.java:126)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- testItrNextRemove_hasNext -->
  <testcase name="testItrNextRemove_next" time="0.003" classname="ItrTest_AB_remove1_A">
    <failure type="java.lang.AssertionError" message="expected [1] but found [2]">
      <![CDATA[java.lang.AssertionError: expected [1] but found [2]
	at TestCase.next(TestCase.java:282)
	at ItrTest_AB_remove1_A.testItrNextRemove_next(ItrTest_AB_remove1_A.java:137)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- testItrNextRemove_next -->
  <testcase name="testItrNextRemove_remove" time="0.008" classname="ItrTest_AB_remove1_A"/>
  <testcase name="testItrNext_hasNext" time="0.0" classname="ItrTest_AB_remove1_A">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at TestCase.hasNext(TestCase.java:271)
	at ItrTest_AB_remove1_A.testItrNext_hasNext(ItrTest_AB_remove1_A.java:92)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- testItrNext_hasNext -->
  <testcase name="testItrNext_next" time="0.0" classname="ItrTest_AB_remove1_A">
    <failure type="java.lang.AssertionError" message="expected [1] but found [2]">
      <![CDATA[java.lang.AssertionError: expected [1] but found [2]
	at TestCase.next(TestCase.java:282)
	at ItrTest_AB_remove1_A.testItrNext_next(ItrTest_AB_remove1_A.java:103)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- testItrNext_next -->
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_AB_remove1_A"/>
  <testcase name="testItr_hasNext" time="0.007" classname="ItrTest_AB_remove1_A"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_AB_remove1_A"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_AB_remove1_A"/>
  <testcase name="testItrNextRemove_hasNext" time="0.002" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItrNextRemove_next" time="0.002" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItrNextRemove_remove" time="0.001" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItrNext_next" time="0.0" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItr_hasNext" time="0.0" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_AB_remove0_B"/>
  <testcase name="testItrNextNextRemove_hasNext" time="0.0" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextNextRemove_next" time="0.004" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextNextRemove_remove" time="0.0" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextNext_hasNext" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextNext_next" time="0.002" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextNext_remove" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextRemoveNext_hasNext" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextRemoveNext_next" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextRemoveNext_remove" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextRemove_hasNext" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextRemove_remove" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNext_hasNext" time="0.0" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNext_next" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItr_next" time="0.0" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItr_remove" time="0.001" classname="ItrTest_A_addToFrontB_BA"/>
  <testcase name="testItrNextNextRemove_hasNext" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextNextRemove_next" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextNextRemove_remove" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextNext_hasNext" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextNext_next" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextNext_remove" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextRemoveNext_hasNext" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextRemoveNext_next" time="0.003" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextRemoveNext_remove" time="0.001" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextRemove_hasNext" time="0.001" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextRemove_next" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextRemove_remove" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNext_next" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_A_addToRearB_AB"/>
  <testcase name="testItrNextNextRemove_hasNext" time="0.003" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextNextRemove_next" time="0.001" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextNextRemove_remove" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextNext_hasNext" time="0.003" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextNext_next" time="0.001" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextNext_remove" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextRemoveNext_hasNext" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextRemoveNext_next" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextRemoveNext_remove" time="0.001" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextRemove_hasNext" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextRemove_next" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextRemove_remove" time="0.001" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNext_next" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItr_hasNext" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_ABC_remove1_AC"/>
  <testcase name="testItrNextNextRemove_hasNext" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextNextRemove_next" time="0.001" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextNextRemove_remove" time="0.001" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextNext_hasNext" time="0.001" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextNext_next" time="0.001" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextNext_remove" time="0.001" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextRemoveNext_hasNext" time="0.001" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextRemoveNext_next" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextRemoveNext_remove" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextRemove_hasNext" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextRemove_next" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextRemove_remove" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNext_next" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNext_remove" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItr_hasNext" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItr_next" time="0.0" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItr_remove" time="0.001" classname="ItrTest_ABC_removeA_BC"/>
  <testcase name="testItrNextNextRemove_hasNext" time="0.0" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextNextRemove_next" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextNextRemove_remove" time="0.003" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextNext_hasNext" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextNext_next" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextNext_remove" time="0.0" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextRemoveNext_hasNext" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextRemoveNext_next" time="0.0" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextRemoveNext_remove" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextRemove_hasNext" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextRemove_next" time="0.0" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextRemove_remove" time="0.0" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNext_hasNext" time="0.0" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNext_next" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNext_remove" time="0.0" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItr_next" time="0.001" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_ABC_removeFirst_BC"/>
  <testcase name="testItrNextRemove_hasNext" time="0.001" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItrNextRemove_remove" time="0.008" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItrNext_next" time="0.0" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItr_hasNext" time="0.0" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItr_next" time="0.0" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_emptyList_add0A_A"/>
  <testcase name="testItrNextRemove_hasNext" time="0.004" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItrNextRemove_remove" time="0.001" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItrNext_hasNext" time="0.002" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItrNext_next" time="0.0" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItrNext_remove" time="0.001" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItr_hasNext" time="0.001" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItr_next" time="0.0" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_emptyList_addA_A"/>
  <testcase name="testItrNextRemove_hasNext" time="0.009" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItrNextRemove_next" time="0.001" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItrNextRemove_remove" time="0.0" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItrNext_hasNext" time="0.01" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItrNext_next" time="0.001" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItrNext_remove" time="0.0" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItr_hasNext" time="0.0" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItr_next" time="0.0" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItr_remove" time="0.0" classname="ItrTest_emptyList_addToFrontA_A"/>
  <testcase name="testItrNextRemove_hasNext" time="0.007" classname="ItrTest_emptyList_addToRearA_A"/>
  <testcase name="testItrNextRemove_next" time="0.002" classname="ItrTest_emptyList_addToRearA_A"/>
  <testcase name="testItrNextRemove_remove" time="0.009" classname="ItrTest_emptyList_addToRearA_A"/>
  <testcase name="testItrNext_hasNext" time="0.001" classname="ItrTest_emptyList_addToRearA_A"/>
  <testcase name="testItrNext_next" time="0.001" classname="ItrTest_emptyList_addToRearA_A"/>
  <testcase name="testItrNext_remove" time="0.0" classname="ItrTest_emptyList_addToRearA_A"/>
  <testcase name="testItr_hasNext" time="0.0" classname="ItrTest_emptyList_addToRearA_A"/>
  <testcase name="testItr_next" time="0.0" classname="ItrTest_emptyList_addToRearA_A"/>
  <testcase name="testItr_remove" time="0.001" classname="ItrTest_emptyList_addToRearA_A"/>
</testsuite>
