<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="251" passed="251">
  <reporter-output>
  </reporter-output>
  <suite name="List Testing 2" duration-ms="1273" started-at="2016-11-04T18:37:01Z" finished-at="2016-11-04T18:37:02Z">
    <groups>
    </groups>
    <test name="Good List" duration-ms="1116" started-at="2016-11-04T18:37:01Z" finished-at="2016-11-04T18:37:02Z">
      <class name="Test_A_addToFrontB_BA">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="8" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAdd" duration-ms="13" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_addToFrontB_BA.testAddAfter_invalidElement(Test_A_addToFrontB_BA.java:211)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAddAfter_validElement" duration-ms="2" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAddToFront" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAddToRear" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_addToFrontB_BA.testAdd_invalidIndex(Test_A_addToFrontB_BA.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 3, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_addToFrontB_BA.testAdd_invalidIndex(Test_A_addToFrontB_BA.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAdd_validIndex" duration-ms="5" started-at="2016-11-04T12:37:01Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testContains_invalidElement" duration-ms="6" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testContains_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testContains_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testFirst" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_addToFrontB_BA.testGet_invalidIndex(Test_A_addToFrontB_BA.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_addToFrontB_BA.testGet_invalidIndex(Test_A_addToFrontB_BA.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testGet_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testGet_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testIsEmpty" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testIterator" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testLast" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemoveFirst" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemoveLast" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_A_addToFrontB_BA.testRemove_invalidElement(Test_A_addToFrontB_BA.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemove_invalidIndex" duration-ms="2" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_addToFrontB_BA.testRemove_invalidIndex(Test_A_addToFrontB_BA.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemove_invalidIndex" duration-ms="2" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_addToFrontB_BA.testRemove_invalidIndex(Test_A_addToFrontB_BA.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemove_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemove_validElement" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemove_validIndex" duration-ms="4" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testRemove_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testSet_invalidIndex" duration-ms="2" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_addToFrontB_BA.testSet_invalidIndex(Test_A_addToFrontB_BA.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_addToFrontB_BA.testSet_invalidIndex(Test_A_addToFrontB_BA.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testSet_validIndex" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="validIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testSet_validIndex" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="validIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_addToFrontB_BA@51081592]" name="testSize" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_addToFrontB_BA -->
      <class name="Test_A_addToRearB_AB">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAdd" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAddAfter_invalidElement" duration-ms="3" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_addToRearB_AB.testAddAfter_invalidElement(Test_A_addToRearB_AB.java:211)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAddAfter_validElement" duration-ms="17" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAddToFront" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAddToRear" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_addToRearB_AB.testAdd_invalidIndex(Test_A_addToRearB_AB.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 3, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_addToRearB_AB.testAdd_invalidIndex(Test_A_addToRearB_AB.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAdd_validIndex" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testContains_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testContains_validElement" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testContains_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testFirst" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="31" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_addToRearB_AB.testGet_invalidIndex(Test_A_addToRearB_AB.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_addToRearB_AB.testGet_invalidIndex(Test_A_addToRearB_AB.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testGet_validIndex" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testGet_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testIndexOf_invalidElement" duration-ms="9" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testIndexOf_validElement" duration-ms="5" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testIndexOf_validElement" duration-ms="9" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testIsEmpty" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testIterator" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testLast" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemoveFirst" duration-ms="8" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemoveLast" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemove_invalidElement" duration-ms="2" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_A_addToRearB_AB.testRemove_invalidElement(Test_A_addToRearB_AB.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_addToRearB_AB.testRemove_invalidIndex(Test_A_addToRearB_AB.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_addToRearB_AB.testRemove_invalidIndex(Test_A_addToRearB_AB.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemove_validElement" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemove_validElement" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="validElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemove_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testRemove_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_addToRearB_AB.testSet_invalidIndex(Test_A_addToRearB_AB.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_addToRearB_AB.testSet_invalidIndex(Test_A_addToRearB_AB.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testSet_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testSet_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="validIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_addToRearB_AB@7f9a81e8]" name="testSize" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_addToRearB_AB -->
      <class name="Test_A_remove0_emptyList">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testAdd" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testAddAfter_invalidElement" duration-ms="6" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:100)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_remove0_emptyList.testAddAfter_invalidElement(Test_A_remove0_emptyList.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testAddToFront" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testAddToRear" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testAdd_invalidIndex" duration-ms="10" started-at="2016-11-04T12:37:01Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_remove0_emptyList.testAdd_invalidIndex(Test_A_remove0_emptyList.java:196)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:01Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_remove0_emptyList.testAdd_invalidIndex(Test_A_remove0_emptyList.java:196)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testContains_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testFirst" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.first(GoodList.java:54)
	at TestCase.first(TestCase.java:103)
	at Test_A_remove0_emptyList.testFirst(Test_A_remove0_emptyList.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testGet" duration-ms="4" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_remove0_emptyList.testGet(Test_A_remove0_emptyList.java:238)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testIndexOf_invalidElement" duration-ms="11" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="12" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testIsEmpty" duration-ms="3" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testIterator" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testLast" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.last(GoodList.java:62)
	at TestCase.last(TestCase.java:114)
	at Test_A_remove0_emptyList.testLast(Test_A_remove0_emptyList.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testRemoveFirst" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeFirst(GoodList.java:23)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_A_remove0_emptyList.testRemoveFirst(Test_A_remove0_emptyList.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="3" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testRemoveLast" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeLast(GoodList.java:31)
	at TestCase.removeLast(TestCase.java:81)
	at Test_A_remove0_emptyList.testRemoveLast(Test_A_remove0_emptyList.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testRemove_invalidElement" duration-ms="2" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:39)
	at TestCase.remove(TestCase.java:92)
	at Test_A_remove0_emptyList.testRemove_invalidElement(Test_A_remove0_emptyList.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testRemove_invalidIndex" duration-ms="6" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_remove0_emptyList.testRemove_invalidIndex(Test_A_remove0_emptyList.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testSet" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_remove0_emptyList.testSet(Test_A_remove0_emptyList.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_remove0_emptyList@9629756]" name="testSize" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_remove0_emptyList -->
      <class name="Test_AB_removeA_B">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAdd" duration-ms="11" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAddAfter_invalidElement" duration-ms="4" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_AB_removeA_B.testAddAfter_invalidElement(Test_AB_removeA_B.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAddAfter_validElement" duration-ms="3" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAddToFront" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAddToRear" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeA_B.testAdd_invalidIndex(Test_AB_removeA_B.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeA_B.testAdd_invalidIndex(Test_AB_removeA_B.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testAdd_validIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testContains_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testContains_validElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testFirst" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeA_B.testGet_invalidIndex(Test_AB_removeA_B.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeA_B.testGet_invalidIndex(Test_AB_removeA_B.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testGet_validIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testIsEmpty" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testIterator" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testLast" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testRemoveFirst" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testRemoveLast" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_AB_removeA_B.testRemove_invalidElement(Test_AB_removeA_B.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeA_B.testRemove_invalidIndex(Test_AB_removeA_B.java:252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeA_B.testRemove_invalidIndex(Test_AB_removeA_B.java:252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testRemove_validElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testRemove_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeA_B.testSet_invalidIndex(Test_AB_removeA_B.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeA_B.testSet_invalidIndex(Test_AB_removeA_B.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testSet_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_AB_removeA_B@5419f379]" name="testSize" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_AB_removeA_B -->
      <class name="Test_A_removeA_emptyList">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testAdd" duration-ms="10" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:100)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_removeA_emptyList.testAddAfter_invalidElement(Test_A_removeA_emptyList.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testAddToFront" duration-ms="2" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testAddToRear" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testAdd_invalidIndex" duration-ms="2" started-at="2016-11-04T12:37:01Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeA_emptyList.testAdd_invalidIndex(Test_A_removeA_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeA_emptyList.testAdd_invalidIndex(Test_A_removeA_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testContains_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testFirst" duration-ms="1" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.first(GoodList.java:54)
	at TestCase.first(TestCase.java:103)
	at Test_A_removeA_emptyList.testFirst(Test_A_removeA_emptyList.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:01Z" finished-at="2016-11-04T12:37:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testGet" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_removeA_emptyList.testGet(Test_A_removeA_emptyList.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testIsEmpty" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testIterator" duration-ms="2" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testLast" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.last(GoodList.java:62)
	at TestCase.last(TestCase.java:114)
	at Test_A_removeA_emptyList.testLast(Test_A_removeA_emptyList.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testRemoveFirst" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeFirst(GoodList.java:23)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_A_removeA_emptyList.testRemoveFirst(Test_A_removeA_emptyList.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testRemoveLast" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeLast(GoodList.java:31)
	at TestCase.removeLast(TestCase.java:81)
	at Test_A_removeA_emptyList.testRemoveLast(Test_A_removeA_emptyList.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testRemove_invalidElement" duration-ms="4" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:39)
	at TestCase.remove(TestCase.java:92)
	at Test_A_removeA_emptyList.testRemove_invalidElement(Test_A_removeA_emptyList.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_removeA_emptyList.testRemove_invalidIndex(Test_A_removeA_emptyList.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testSet" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_removeA_emptyList.testSet(Test_A_removeA_emptyList.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_removeA_emptyList@62ee68d8]" name="testSize" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_removeA_emptyList -->
      <class name="Test_AB_removeFirst_B">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAdd" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_AB_removeFirst_B.testAddAfter_invalidElement(Test_AB_removeFirst_B.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAddToFront" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAddToRear" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeFirst_B.testAdd_invalidIndex(Test_AB_removeFirst_B.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeFirst_B.testAdd_invalidIndex(Test_AB_removeFirst_B.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAdd_validIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testContains_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testContains_validElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testFirst" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeFirst_B.testGet_invalidIndex(Test_AB_removeFirst_B.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeFirst_B.testGet_invalidIndex(Test_AB_removeFirst_B.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testGet_validIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testIsEmpty" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testIterator" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testRemoveFirst" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testLast" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testRemoveLast" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_AB_removeFirst_B.testRemove_invalidElement(Test_AB_removeFirst_B.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeFirst_B.testRemove_invalidIndex(Test_AB_removeFirst_B.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testRemove_invalidIndex" duration-ms="21" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeFirst_B.testRemove_invalidIndex(Test_AB_removeFirst_B.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testRemove_validElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testRemove_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeFirst_B.testSet_invalidIndex(Test_AB_removeFirst_B.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeFirst_B.testSet_invalidIndex(Test_AB_removeFirst_B.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testSet_validIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="validIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_AB_removeFirst_B@7dc7cbad]" name="testSize" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_AB_removeFirst_B -->
      <class name="Test_A_set0B_B">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAdd" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAddAfter_invalidElement" duration-ms="3" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_set0B_B.testAddAfter_invalidElement(Test_A_set0B_B.java:211)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAddToFront" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAddToRear" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_set0B_B.testAdd_invalidIndex(Test_A_set0B_B.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_set0B_B.testAdd_invalidIndex(Test_A_set0B_B.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testContains_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testContains_validElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testFirst" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_set0B_B.testGet_invalidIndex(Test_A_set0B_B.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_set0B_B.testGet_invalidIndex(Test_A_set0B_B.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testGet_validIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testIsEmpty" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testIterator" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testLast" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testRemoveFirst" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testRemoveLast" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_A_set0B_B.testRemove_invalidElement(Test_A_set0B_B.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_set0B_B.testRemove_invalidIndex(Test_A_set0B_B.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_set0B_B.testRemove_invalidIndex(Test_A_set0B_B.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testRemove_validElement" duration-ms="2" started-at="2016-11-04T12:37:02Z" data-provider="validElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testRemove_validIndex" duration-ms="2" started-at="2016-11-04T12:37:02Z" data-provider="indexedValidElements" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_set0B_B.testSet_invalidIndex(Test_A_set0B_B.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testSet_invalidIndex" duration-ms="2" started-at="2016-11-04T12:37:02Z" data-provider="invalidIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_set0B_B.testSet_invalidIndex(Test_A_set0B_B.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testSet_validIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="validIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_set0B_B@4520ebad]" name="testSize" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_A_set0B_B -->
      <class name="Test_A_removeFirst_emptyList">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testAdd" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:100)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_removeFirst_emptyList.testAddAfter_invalidElement(Test_A_removeFirst_emptyList.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testAddToFront" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testAddToRear" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testAdd_invalidIndex" duration-ms="2" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeFirst_emptyList.testAdd_invalidIndex(Test_A_removeFirst_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testAdd_invalidIndex" duration-ms="2" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeFirst_emptyList.testAdd_invalidIndex(Test_A_removeFirst_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testContains_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testFirst" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.first(GoodList.java:54)
	at TestCase.first(TestCase.java:103)
	at Test_A_removeFirst_emptyList.testFirst(Test_A_removeFirst_emptyList.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testGet" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_removeFirst_emptyList.testGet(Test_A_removeFirst_emptyList.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testIsEmpty" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testIterator" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testLast" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.last(GoodList.java:62)
	at TestCase.last(TestCase.java:114)
	at Test_A_removeFirst_emptyList.testLast(Test_A_removeFirst_emptyList.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testRemoveFirst" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeFirst(GoodList.java:23)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_A_removeFirst_emptyList.testRemoveFirst(Test_A_removeFirst_emptyList.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testRemoveLast" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeLast(GoodList.java:31)
	at TestCase.removeLast(TestCase.java:81)
	at Test_A_removeFirst_emptyList.testRemoveLast(Test_A_removeFirst_emptyList.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:39)
	at TestCase.remove(TestCase.java:92)
	at Test_A_removeFirst_emptyList.testRemove_invalidElement(Test_A_removeFirst_emptyList.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_removeFirst_emptyList.testRemove_invalidIndex(Test_A_removeFirst_emptyList.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testSet" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_removeFirst_emptyList.testSet(Test_A_removeFirst_emptyList.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="testSize" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@735b5592]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_A_removeFirst_emptyList -->
      <class name="Test_A_removeLast_emptyList">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testAdd" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:100)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_removeLast_emptyList.testAddAfter_invalidElement(Test_A_removeLast_emptyList.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testAddToFront" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="4" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testAddToRear" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeLast_emptyList.testAdd_invalidIndex(Test_A_removeLast_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" data-provider="invalidAddIndexes" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.LinkedList.checkPositionIndex(LinkedList.java:560)
	at java.util.LinkedList.add(LinkedList.java:507)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeLast_emptyList.testAdd_invalidIndex(Test_A_removeLast_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testAdd_validIndex" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testContains_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testFirst" duration-ms="4" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.first(GoodList.java:54)
	at TestCase.first(TestCase.java:103)
	at Test_A_removeLast_emptyList.testFirst(Test_A_removeLast_emptyList.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testGet" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.get(LinkedList.java:476)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_A_removeLast_emptyList.testGet(Test_A_removeLast_emptyList.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testIsEmpty" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testIterator" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testLast" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.last(GoodList.java:62)
	at TestCase.last(TestCase.java:114)
	at Test_A_removeLast_emptyList.testLast(Test_A_removeLast_emptyList.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testRemoveFirst" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeFirst(GoodList.java:23)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_A_removeLast_emptyList.testRemoveFirst(Test_A_removeLast_emptyList.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testRemoveLast" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeLast(GoodList.java:31)
	at TestCase.removeLast(TestCase.java:81)
	at Test_A_removeLast_emptyList.testRemoveLast(Test_A_removeLast_emptyList.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:39)
	at TestCase.remove(TestCase.java:92)
	at Test_A_removeLast_emptyList.testRemove_invalidElement(Test_A_removeLast_emptyList.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.remove(LinkedList.java:525)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_A_removeLast_emptyList.testRemove_invalidIndex(Test_A_removeLast_emptyList.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="3" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testSet" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(LinkedList.java:555)
	at java.util.LinkedList.set(LinkedList.java:490)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_A_removeLast_emptyList.testSet(Test_A_removeLast_emptyList.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="initialize" is-config="true" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_removeLast_emptyList@58651fd0]" name="testSize" duration-ms="1" started-at="2016-11-04T12:37:02Z" finished-at="2016-11-04T12:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_removeLast_emptyList -->
    </test> <!-- Good List -->
    <test name="Bad List" duration-ms="1" started-at="2016-11-04T18:37:02Z" finished-at="2016-11-04T18:37:02Z">
    </test> <!-- Bad List -->
  </suite> <!-- List Testing 2 -->
</testng-results>
