<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="434" passed="434">
  <reporter-output>
  </reporter-output>
  <suite name="Indexed Unordered List" duration-ms="1422" started-at="2016-10-31T22:47:22Z" finished-at="2016-10-31T22:47:23Z">
    <groups>
    </groups>
    <test name="IUArrayList" duration-ms="1422" started-at="2016-10-31T22:47:22Z" finished-at="2016-10-31T22:47:23Z">
      <class name="Test_A_addToFrontB_BA">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAdd" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_addToFrontB_BA.testAddAfter_invalidElement(Test_A_addToFrontB_BA.java:211)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAddAfter_validElement" duration-ms="3" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAddAfter_validElement" duration-ms="2" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAddToFront" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_addToFrontB_BA.testAdd_invalidIndex(Test_A_addToFrontB_BA.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_addToFrontB_BA.testAdd_invalidIndex(Test_A_addToFrontB_BA.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testContains_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testContains_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testContains_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="4" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testGet_invalidIndex" duration-ms="3" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_addToFrontB_BA.testGet_invalidIndex(Test_A_addToFrontB_BA.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_addToFrontB_BA.testGet_invalidIndex(Test_A_addToFrontB_BA.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testGet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testGet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testIndexOf_invalidElement" duration-ms="4" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testIsEmpty" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testIterator" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemoveLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_A_addToFrontB_BA.testRemove_invalidElement(Test_A_addToFrontB_BA.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_addToFrontB_BA.testRemove_invalidIndex(Test_A_addToFrontB_BA.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_addToFrontB_BA.testRemove_invalidIndex(Test_A_addToFrontB_BA.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemove_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemove_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemove_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="2" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testRemove_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_addToFrontB_BA.testSet_invalidIndex(Test_A_addToFrontB_BA.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_addToFrontB_BA.testSet_invalidIndex(Test_A_addToFrontB_BA.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_addToFrontB_BA@7c16905e]" name="testSize" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_addToFrontB_BA -->
      <class name="Test_A_remove0_emptyList">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="4" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testAdd" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="5" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_remove0_emptyList.testAddAfter_invalidElement(Test_A_remove0_emptyList.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testAddToFront" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testAddToRear" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_remove0_emptyList.testAdd_invalidIndex(Test_A_remove0_emptyList.java:196)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_remove0_emptyList.testAdd_invalidIndex(Test_A_remove0_emptyList.java:196)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testContains_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.first(IUArrayList.java:32)
	at TestCase.first(TestCase.java:103)
	at Test_A_remove0_emptyList.testFirst(Test_A_remove0_emptyList.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="5" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testGet" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_remove0_emptyList.testGet(Test_A_remove0_emptyList.java:238)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testIsEmpty" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testIterator" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testLast" duration-ms="6" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.last(IUArrayList.java:41)
	at TestCase.last(TestCase.java:114)
	at Test_A_remove0_emptyList.testLast(Test_A_remove0_emptyList.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeFirst]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeFirst
	at IUArrayList.removeFirst(IUArrayList.java:294)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_A_remove0_emptyList.testRemoveFirst(Test_A_remove0_emptyList.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testRemoveLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeLast]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeLast
	at IUArrayList.removeLast(IUArrayList.java:312)
	at TestCase.removeLast(TestCase.java:81)
	at Test_A_remove0_emptyList.testRemoveLast(Test_A_remove0_emptyList.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_A_remove0_emptyList.testRemove_invalidElement(Test_A_remove0_emptyList.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_remove0_emptyList.testRemove_invalidIndex(Test_A_remove0_emptyList.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testSet" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_remove0_emptyList.testSet(Test_A_remove0_emptyList.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_remove0_emptyList@2a5ca609]" name="testSize" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_remove0_emptyList -->
      <class name="Test_emptyList_addToRearA_A">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAdd" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_emptyList_addToRearA_A.testAddAfter_invalidElement(Test_emptyList_addToRearA_A.java:209)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="validElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAddToFront" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAdd_invalidIndex" duration-ms="2" started-at="2016-10-31T16:47:22Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_emptyList_addToRearA_A.testAdd_invalidIndex(Test_emptyList_addToRearA_A.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_emptyList_addToRearA_A.testAdd_invalidIndex(Test_emptyList_addToRearA_A.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAdd_validIndex" duration-ms="4" started-at="2016-10-31T16:47:22Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:22Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testContains_invalidElement" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testContains_validElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="validElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testFirst" duration-ms="3" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testGet_invalidIndex" duration-ms="4" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_emptyList_addToRearA_A.testGet_invalidIndex(Test_emptyList_addToRearA_A.java:299)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_emptyList_addToRearA_A.testGet_invalidIndex(Test_emptyList_addToRearA_A.java:299)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testGet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-10-31T16:47:22Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testIsEmpty" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testIterator" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testLast" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testRemoveLast" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_emptyList_addToRearA_A.testRemove_invalidElement(Test_emptyList_addToRearA_A.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_emptyList_addToRearA_A.testRemove_invalidIndex(Test_emptyList_addToRearA_A.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testRemove_invalidIndex" duration-ms="2" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_emptyList_addToRearA_A.testRemove_invalidIndex(Test_emptyList_addToRearA_A.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testRemove_validElement" duration-ms="2" started-at="2016-10-31T16:47:22Z" data-provider="validElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testRemove_validIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testSet_invalidIndex" duration-ms="2" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_emptyList_addToRearA_A.testSet_invalidIndex(Test_emptyList_addToRearA_A.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_emptyList_addToRearA_A.testSet_invalidIndex(Test_emptyList_addToRearA_A.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:22Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_emptyList_addToRearA_A@7dc7cbad]" name="testSize" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_emptyList_addToRearA_A -->
      <class name="Test_A_removeA_emptyList">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testAdd" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_removeA_emptyList.testAddAfter_invalidElement(Test_A_removeA_emptyList.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testAddToFront" duration-ms="9" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeA_emptyList.testAdd_invalidIndex(Test_A_removeA_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeA_emptyList.testAdd_invalidIndex(Test_A_removeA_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testContains_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.first(IUArrayList.java:32)
	at TestCase.first(TestCase.java:103)
	at Test_A_removeA_emptyList.testFirst(Test_A_removeA_emptyList.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testGet" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_removeA_emptyList.testGet(Test_A_removeA_emptyList.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testIsEmpty" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testIterator" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.last(IUArrayList.java:41)
	at TestCase.last(TestCase.java:114)
	at Test_A_removeA_emptyList.testLast(Test_A_removeA_emptyList.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeFirst]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeFirst
	at IUArrayList.removeFirst(IUArrayList.java:294)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_A_removeA_emptyList.testRemoveFirst(Test_A_removeA_emptyList.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="2" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testRemoveLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeLast]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeLast
	at IUArrayList.removeLast(IUArrayList.java:312)
	at TestCase.removeLast(TestCase.java:81)
	at Test_A_removeA_emptyList.testRemoveLast(Test_A_removeA_emptyList.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_A_removeA_emptyList.testRemove_invalidElement(Test_A_removeA_emptyList.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_removeA_emptyList.testRemove_invalidIndex(Test_A_removeA_emptyList.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="2" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testSet" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_removeA_emptyList.testSet(Test_A_removeA_emptyList.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_removeA_emptyList@1753acfe]" name="testSize" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_removeA_emptyList -->
      <class name="Test_emptyList_addToFrontA_A">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAdd" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_emptyList_addToFrontA_A.testAddAfter_invalidElement(Test_emptyList_addToFrontA_A.java:209)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAddAfter_validElement" duration-ms="4" started-at="2016-10-31T16:47:22Z" data-provider="validElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAddToFront" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_emptyList_addToFrontA_A.testAdd_invalidIndex(Test_emptyList_addToFrontA_A.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAdd_invalidIndex" duration-ms="2" started-at="2016-10-31T16:47:22Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_emptyList_addToFrontA_A.testAdd_invalidIndex(Test_emptyList_addToFrontA_A.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testAdd_validIndex" duration-ms="2" started-at="2016-10-31T16:47:22Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testContains_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testContains_validElement" duration-ms="0" started-at="2016-10-31T16:47:22Z" data-provider="validElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testFirst" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_emptyList_addToFrontA_A.testGet_invalidIndex(Test_emptyList_addToFrontA_A.java:299)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_emptyList_addToFrontA_A.testGet_invalidIndex(Test_emptyList_addToFrontA_A.java:299)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testGet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testIsEmpty" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testIterator" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testLast" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testRemoveLast" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testRemove_invalidElement" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_emptyList_addToFrontA_A.testRemove_invalidElement(Test_emptyList_addToFrontA_A.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_emptyList_addToFrontA_A.testRemove_invalidIndex(Test_emptyList_addToFrontA_A.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_emptyList_addToFrontA_A.testRemove_invalidIndex(Test_emptyList_addToFrontA_A.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testRemove_validElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="validElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testRemove_validIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_emptyList_addToFrontA_A.testSet_invalidIndex(Test_emptyList_addToFrontA_A.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_emptyList_addToFrontA_A.testSet_invalidIndex(Test_emptyList_addToFrontA_A.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testSet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="testSize" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addToFrontA_A@5419f379]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_emptyList_addToFrontA_A -->
      <class name="Test_A_removeLast_emptyList">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testAdd" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_removeLast_emptyList.testAddAfter_invalidElement(Test_A_removeLast_emptyList.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testAddToFront" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testAddToRear" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeLast_emptyList.testAdd_invalidIndex(Test_A_removeLast_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeLast_emptyList.testAdd_invalidIndex(Test_A_removeLast_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testContains_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.first(IUArrayList.java:32)
	at TestCase.first(TestCase.java:103)
	at Test_A_removeLast_emptyList.testFirst(Test_A_removeLast_emptyList.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testGet" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_removeLast_emptyList.testGet(Test_A_removeLast_emptyList.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testIsEmpty" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testIterator" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.last(IUArrayList.java:41)
	at TestCase.last(TestCase.java:114)
	at Test_A_removeLast_emptyList.testLast(Test_A_removeLast_emptyList.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testRemoveFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeFirst]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeFirst
	at IUArrayList.removeFirst(IUArrayList.java:294)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_A_removeLast_emptyList.testRemoveFirst(Test_A_removeLast_emptyList.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testRemoveLast" duration-ms="13" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeLast]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeLast
	at IUArrayList.removeLast(IUArrayList.java:312)
	at TestCase.removeLast(TestCase.java:81)
	at Test_A_removeLast_emptyList.testRemoveLast(Test_A_removeLast_emptyList.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_A_removeLast_emptyList.testRemove_invalidElement(Test_A_removeLast_emptyList.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_removeLast_emptyList.testRemove_invalidIndex(Test_A_removeLast_emptyList.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testSet" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_removeLast_emptyList.testSet(Test_A_removeLast_emptyList.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_removeLast_emptyList@548a9f61]" name="testSize" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_removeLast_emptyList -->
      <class name="Test_AB_removeLast_A">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAdd" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_AB_removeLast_A.testAddAfter_invalidElement(Test_AB_removeLast_A.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAddToFront" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAddToRear" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeLast_A.testAdd_invalidIndex(Test_AB_removeLast_A.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeLast_A.testAdd_invalidIndex(Test_AB_removeLast_A.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testContains_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testContains_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testFirst" duration-ms="9" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeLast_A.testGet_invalidIndex(Test_AB_removeLast_A.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeLast_A.testGet_invalidIndex(Test_AB_removeLast_A.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testGet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testIsEmpty" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testIterator" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testRemoveFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testRemoveLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_AB_removeLast_A.testRemove_invalidElement(Test_AB_removeLast_A.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeLast_A.testRemove_invalidIndex(Test_AB_removeLast_A.java:252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testRemove_invalidIndex" duration-ms="5" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeLast_A.testRemove_invalidIndex(Test_AB_removeLast_A.java:252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testRemove_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testRemove_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeLast_A.testSet_invalidIndex(Test_AB_removeLast_A.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeLast_A.testSet_invalidIndex(Test_AB_removeLast_A.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_AB_removeLast_A@28feb3fa]" name="testSize" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_AB_removeLast_A -->
      <class name="Test_A_addToRearB_AB">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAdd" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_addToRearB_AB.testAddAfter_invalidElement(Test_A_addToRearB_AB.java:211)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAddToFront" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_addToRearB_AB.testAdd_invalidIndex(Test_A_addToRearB_AB.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_addToRearB_AB.testAdd_invalidIndex(Test_A_addToRearB_AB.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testContains_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testContains_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testContains_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="3" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_addToRearB_AB.testGet_invalidIndex(Test_A_addToRearB_AB.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_addToRearB_AB.testGet_invalidIndex(Test_A_addToRearB_AB.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testGet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testGet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testIsEmpty" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testIterator" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemoveLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_A_addToRearB_AB.testRemove_invalidElement(Test_A_addToRearB_AB.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_addToRearB_AB.testRemove_invalidIndex(Test_A_addToRearB_AB.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_addToRearB_AB.testRemove_invalidIndex(Test_A_addToRearB_AB.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemove_validElement" duration-ms="2" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemove_validElement" duration-ms="2" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemove_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="6" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testRemove_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_addToRearB_AB.testSet_invalidIndex(Test_A_addToRearB_AB.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testSet_invalidIndex" duration-ms="2" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_addToRearB_AB.testSet_invalidIndex(Test_A_addToRearB_AB.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testSet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="testSize" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_addToRearB_AB@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_A_addToRearB_AB -->
      <class name="Test_AB_removeA_B">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAdd" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_AB_removeA_B.testAddAfter_invalidElement(Test_AB_removeA_B.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAddAfter_validElement" duration-ms="16" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAddToFront" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeA_B.testAdd_invalidIndex(Test_AB_removeA_B.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeA_B.testAdd_invalidIndex(Test_AB_removeA_B.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="10" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testContains_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testContains_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeA_B.testGet_invalidIndex(Test_AB_removeA_B.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeA_B.testGet_invalidIndex(Test_AB_removeA_B.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testGet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testIterator" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testIsEmpty" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testRemoveFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_AB_removeA_B.testRemove_invalidElement(Test_AB_removeA_B.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testRemoveLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeA_B.testRemove_invalidIndex(Test_AB_removeA_B.java:252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeA_B.testRemove_invalidIndex(Test_AB_removeA_B.java:252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testRemove_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testRemove_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeA_B.testSet_invalidIndex(Test_AB_removeA_B.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeA_B.testSet_invalidIndex(Test_AB_removeA_B.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testSize" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_AB_removeA_B@675d3402]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
      </class> <!-- Test_AB_removeA_B -->
      <class name="Test_ABC_remove1_AC">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_ABC_remove1_AC.testAddAfter_invalidElement(Test_ABC_remove1_AC.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAdd" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAddToFront" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAddToRear" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_ABC_remove1_AC.testAdd_invalidIndex(Test_ABC_remove1_AC.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_ABC_remove1_AC.testAdd_invalidIndex(Test_ABC_remove1_AC.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testContains_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testContains_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testContains_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_ABC_remove1_AC.testGet_invalidIndex(Test_ABC_remove1_AC.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_ABC_remove1_AC.testGet_invalidIndex(Test_ABC_remove1_AC.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testGet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testGet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testIndexOf()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testIndexOf" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf(int, java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testIndexOf" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testIsEmpty" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIndexOf(int, java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testIndexOf" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testIterator" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemoveLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_ABC_remove1_AC.testRemove_invalidElement(Test_ABC_remove1_AC.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_ABC_remove1_AC.testRemove_invalidIndex(Test_ABC_remove1_AC.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_ABC_remove1_AC.testRemove_invalidIndex(Test_ABC_remove1_AC.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemove_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemove_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemove_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_ABC_remove1_AC.testSet_invalidIndex(Test_ABC_remove1_AC.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testRemove_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_ABC_remove1_AC.testSet_invalidIndex(Test_ABC_remove1_AC.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_ABC_remove1_AC@51565ec2]" name="testSize" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_ABC_remove1_AC -->
      <class name="Test_AB_removeFirst_B">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAdd" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_AB_removeFirst_B.testAddAfter_invalidElement(Test_AB_removeFirst_B.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAddToFront" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeFirst_B.testAdd_invalidIndex(Test_AB_removeFirst_B.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_AB_removeFirst_B.testAdd_invalidIndex(Test_AB_removeFirst_B.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testContains_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testContains_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeFirst_B.testGet_invalidIndex(Test_AB_removeFirst_B.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_AB_removeFirst_B.testGet_invalidIndex(Test_AB_removeFirst_B.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testGet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testIsEmpty" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testIterator" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testRemoveFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testRemoveLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_AB_removeFirst_B.testRemove_invalidElement(Test_AB_removeFirst_B.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeFirst_B.testRemove_invalidIndex(Test_AB_removeFirst_B.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_AB_removeFirst_B.testRemove_invalidIndex(Test_AB_removeFirst_B.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testRemove_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testRemove_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeFirst_B.testSet_invalidIndex(Test_AB_removeFirst_B.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_AB_removeFirst_B.testSet_invalidIndex(Test_AB_removeFirst_B.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testSet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_AB_removeFirst_B@68be2bc2]" name="testSize" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_AB_removeFirst_B -->
      <class name="Test_A_set0B_B">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAdd" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_set0B_B.testAddAfter_invalidElement(Test_A_set0B_B.java:211)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAddToFront" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAddToRear" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAdd_invalidIndex" duration-ms="9" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_set0B_B.testAdd_invalidIndex(Test_A_set0B_B.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_set0B_B.testAdd_invalidIndex(Test_A_set0B_B.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testAdd_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testContains_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testContains_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_set0B_B.testGet_invalidIndex(Test_A_set0B_B.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_set0B_B.testGet_invalidIndex(Test_A_set0B_B.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="3" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testGet_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="6" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testIsEmpty" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testIterator" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testRemoveFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testRemoveLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_A_set0B_B.testRemove_invalidElement(Test_A_set0B_B.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_set0B_B.testRemove_invalidIndex(Test_A_set0B_B.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_set0B_B.testRemove_invalidIndex(Test_A_set0B_B.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testRemove_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testRemove_validIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_set0B_B.testSet_invalidIndex(Test_A_set0B_B.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_set0B_B.testSet_invalidIndex(Test_A_set0B_B.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testSet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_set0B_B@20e2cbe0]" name="testSize" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_set0B_B -->
      <class name="Test_A_removeFirst_emptyList">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testAdd" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_A_removeFirst_emptyList.testAddAfter_invalidElement(Test_A_removeFirst_emptyList.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testAddToFront" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeFirst_emptyList.testAdd_invalidIndex(Test_A_removeFirst_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_A_removeFirst_emptyList.testAdd_invalidIndex(Test_A_removeFirst_emptyList.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testAdd_validIndex" duration-ms="4" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testContains_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testFirst" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.first(IUArrayList.java:32)
	at TestCase.first(TestCase.java:103)
	at Test_A_removeFirst_emptyList.testFirst(Test_A_removeFirst_emptyList.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="4" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testGet" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_A_removeFirst_emptyList.testGet(Test_A_removeFirst_emptyList.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testIsEmpty" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testIterator" duration-ms="2" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.last(IUArrayList.java:41)
	at TestCase.last(TestCase.java:114)
	at Test_A_removeFirst_emptyList.testLast(Test_A_removeFirst_emptyList.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testRemoveFirst" duration-ms="2" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeFirst]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeFirst
	at IUArrayList.removeFirst(IUArrayList.java:294)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_A_removeFirst_emptyList.testRemoveFirst(Test_A_removeFirst_emptyList.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testRemoveLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeLast]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeLast
	at IUArrayList.removeLast(IUArrayList.java:312)
	at TestCase.removeLast(TestCase.java:81)
	at Test_A_removeFirst_emptyList.testRemoveLast(Test_A_removeFirst_emptyList.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_A_removeFirst_emptyList.testRemove_invalidElement(Test_A_removeFirst_emptyList.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_A_removeFirst_emptyList.testRemove_invalidIndex(Test_A_removeFirst_emptyList.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testSet" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_A_removeFirst_emptyList.testSet(Test_A_removeFirst_emptyList.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_A_removeFirst_emptyList@4f933fd1]" name="testSize" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_A_removeFirst_emptyList -->
      <class name="Test_emptyList_addA_A">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAdd" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_emptyList_addA_A.testAddAfter_invalidElement(Test_emptyList_addA_A.java:209)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="8" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="validElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAddToFront" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:22Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_emptyList_addA_A.testAdd_invalidIndex(Test_emptyList_addA_A.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_emptyList_addA_A.testAdd_invalidIndex(Test_emptyList_addA_A.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAdd_validIndex" duration-ms="2" started-at="2016-10-31T16:47:22Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testAdd_validIndex" duration-ms="0" started-at="2016-10-31T16:47:22Z" data-provider="validAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testContains_invalidElement" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testContains_validElement" duration-ms="0" started-at="2016-10-31T16:47:22Z" data-provider="validElements" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testFirst" duration-ms="13" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_emptyList_addA_A.testGet_invalidIndex(Test_emptyList_addA_A.java:299)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_emptyList_addA_A.testGet_invalidIndex(Test_emptyList_addA_A.java:299)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testGet_validIndex" duration-ms="13" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="10" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testIsEmpty" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testIterator" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testLast" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testRemoveLast" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_emptyList_addA_A.testRemove_invalidElement(Test_emptyList_addA_A.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_emptyList_addA_A.testRemove_invalidIndex(Test_emptyList_addA_A.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_emptyList_addA_A.testRemove_invalidIndex(Test_emptyList_addA_A.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testRemove_validElement" duration-ms="2" started-at="2016-10-31T16:47:23Z" data-provider="validElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testRemove_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="indexedValidElements" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testSet_invalidIndex" duration-ms="4" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_emptyList_addA_A.testSet_invalidIndex(Test_emptyList_addA_A.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-10-31T16:47:23Z" data-provider="invalidIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_emptyList_addA_A.testSet_invalidIndex(Test_emptyList_addA_A.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testSet_validIndex" duration-ms="1" started-at="2016-10-31T16:47:23Z" data-provider="validIndexes" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_emptyList_addA_A@d2cc05a]" name="testSize" duration-ms="0" started-at="2016-10-31T16:47:23Z" finished-at="2016-10-31T16:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_emptyList_addA_A -->
      <class name="Test_newList">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="16" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_newList@4520ebad]" name="testAdd" duration-ms="6" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_newList@4520ebad]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - addAfter(T element, T target)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - addAfter(T element, T target)
	at IUArrayList.addAfter(IUArrayList.java:224)
	at TestCase.addAfter(TestCase.java:259)
	at Test_newList.testAddAfter_invalidElement(Test_newList.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_newList@4520ebad]" name="testAddToFront" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_newList@4520ebad]" name="testAddToRear" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_newList@4520ebad]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_newList.testAdd_invalidIndex(Test_newList.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_newList@4520ebad]" name="testAdd_invalidIndex" duration-ms="2" started-at="2016-10-31T16:47:22Z" data-provider="invalidAddIndexes" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.add(IUArrayList.java:139)
	at TestCase.add(TestCase.java:170)
	at Test_newList.testAdd_invalidIndex(Test_newList.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_newList@4520ebad]" name="testAdd_validIndex" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_newList@4520ebad]" name="testContains_invalidElement" duration-ms="3" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_newList@4520ebad]" name="testFirst" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.first(IUArrayList.java:32)
	at TestCase.first(TestCase.java:103)
	at Test_newList.testFirst(Test_newList.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_newList@4520ebad]" name="testGet" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - get]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - get
	at IUArrayList.get(IUArrayList.java:98)
	at TestCase.get(TestCase.java:214)
	at Test_newList.testGet(Test_newList.java:234)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_newList@4520ebad]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_newList@4520ebad]" name="testIsEmpty" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_newList@4520ebad]" name="testIterator" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_newList@4520ebad]" name="testLast" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - first]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - first
	at IUArrayList.last(IUArrayList.java:41)
	at TestCase.last(TestCase.java:114)
	at Test_newList.testLast(Test_newList.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_newList@4520ebad]" name="testRemoveFirst" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeFirst]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeFirst
	at IUArrayList.removeFirst(IUArrayList.java:294)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_newList.testRemoveFirst(Test_newList.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_newList@4520ebad]" name="testRemoveLast" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[IUArrayList - removeLast]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: IUArrayList - removeLast
	at IUArrayList.removeLast(IUArrayList.java:312)
	at TestCase.removeLast(TestCase.java:81)
	at Test_newList.testRemoveLast(Test_newList.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_newList@4520ebad]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[IUArrayList - indexOf]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: IUArrayList - indexOf
	at IUArrayList.remove(IUArrayList.java:276)
	at TestCase.remove(TestCase.java:92)
	at Test_newList.testRemove_invalidElement(Test_newList.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_newList@4520ebad]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - add(index)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - add(index)
	at IUArrayList.remove(IUArrayList.java:243)
	at TestCase.remove(TestCase.java:181)
	at Test_newList.testRemove_invalidIndex(Test_newList.java:202)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_newList@4520ebad]" name="testSet" duration-ms="1" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[IUArrayList - set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: IUArrayList - set
	at IUArrayList.set(IUArrayList.java:83)
	at TestCase.set(TestCase.java:193)
	at Test_newList.testSet(Test_newList.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_newList@4520ebad]" name="initialize" is-config="true" duration-ms="0" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_newList@4520ebad]" name="testSize" duration-ms="2" started-at="2016-10-31T16:47:22Z" finished-at="2016-10-31T16:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_newList -->
    </test> <!-- IUArrayList -->
  </suite> <!-- Indexed Unordered List -->
</testng-results>
